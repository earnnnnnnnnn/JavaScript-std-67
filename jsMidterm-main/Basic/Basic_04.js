function totalVolume(...arr) {
    // ขั้นตอนที่ 1: ใช้ arr.reduce() เพื่อวนลูปผ่านแต่ละอาเรย์ย่อย (กล่อง) ใน arr
    // arr คืออาร์เรย์ที่ประกอบไปด้วยอาเรย์ย่อยๆ (แต่ละอาร์เรย์ย่อยคือลักษณะของกล่องที่มีความยาว, กว้าง, และสูง)
    // ฟังก์ชัน reduce() จะทำการสะสมผลลัพธ์จากแต่ละกล่องที่อยู่ใน arr เพื่อคำนวณผลรวม
    const result = arr.reduce((acc, cer) => {
        
        // ขั้นตอนที่ 2: ใช้ cer.reduce() เพื่อคูณความยาว × ความกว้าง × ความสูง ของแต่ละกล่อง
        // cer คือแต่ละกล่องในอาร์เรย์ arr ซึ่งจะเป็นอาร์เรย์ย่อย (เช่น [4, 2, 4] ซึ่งหมายถึงกล่องที่มีความยาว 4, กว้าง 2, และสูง 4)
        // ฟังก์ชัน reduce() ในที่นี้จะคูณค่าต่างๆ ในอาร์เรย์ย่อยให้ได้ปริมาตรของกล่อง
        // เริ่มต้นจากค่า accumulator (acc) = 1 (เพื่อให้การคูณเริ่มต้นได้)
        const arrIn = cer.reduce((acc, cer) => acc * cer, 1);
        
        // ขั้นตอนที่ 3: บวกผลลัพธ์ของแต่ละกล่อง (arrIn) เข้าไปใน accumulator (acc)
        // เมื่อคำนวณปริมาตรของกล่องแต่ละกล่องเสร็จแล้ว ฟังก์ชันนี้จะบวกผลลัพธ์ของกล่องนั้นเข้ากับ accumulator
        return acc + arrIn;
    }, 0);  // ค่าเริ่มต้นของ accumulator คือ 0

    // ขั้นตอนที่ 4: คืนค่าผลรวมของปริมาตรทั้งหมดที่คำนวณได้จากทุกกล่อง
    return result;
}

// ตัวอย่างการใช้ฟังก์ชัน
console.log(totalVolume([4, 2, 4], [3, 3, 3], [1, 1, 2], [2, 1, 1])); // ผลลัพธ์: 66
// - ปริมาตรของกล่องที่ 1: 4 * 2 * 4 = 32
// - ปริมาตรของกล่องที่ 2: 3 * 3 * 3 = 27
// - ปริมาตรของกล่องที่ 3: 1 * 1 * 2 = 2
// - ปริมาตรของกล่องที่ 4: 2 * 1 * 1 = 2
// ผลรวมของปริมาตรทั้งหมด: 32 + 27 + 2 + 2 = 66

console.log(totalVolume([2, 2, 2], [2, 1, 1])); // ผลลัพธ์: 12
// - ปริมาตรของกล่องที่ 1: 2 * 2 * 2 = 8
// - ปริมาตรของกล่องที่ 2: 2 * 1 * 1 = 2
// ผลรวมของปริมาตรทั้งหมด: 8 + 2 = 12

console.log(totalVolume([1, 1, 1])); // ผลลัพธ์: 1
// - ปริมาตรของกล่องที่ 1: 1 * 1 * 1 = 1
// ผลรวมของปริมาตรทั้งหมด: 1
